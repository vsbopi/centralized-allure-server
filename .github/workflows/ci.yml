name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
      fail-fast: false  # Don't cancel other jobs if one fails

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        echo "✅ Dependencies installed for Python ${{ matrix.python-version }}"

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test server setup (warnings expected in CI)
      run: |
        python test_server.py
      continue-on-error: true

    - name: Test Docker build
      run: |
        docker build -t allure-reports-server:test .

  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Summary job to provide overall status
  ci-success:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()
    steps:
    - name: Check overall CI status
      run: |
        echo "Test job status: ${{ needs.test.result }}"
        echo "Security job status: ${{ needs.security.result }}"
        
        if [[ "${{ needs.test.result }}" == "success" && "${{ needs.security.result }}" == "success" ]]; then
          echo "✅ All CI jobs passed successfully!"
          exit 0
        elif [[ "${{ needs.test.result }}" == "success" && "${{ needs.security.result }}" != "failure" ]]; then
          echo "✅ Core tests passed! Security scan completed with warnings."
          exit 0
        else
          echo "❌ CI pipeline failed. Check individual job results above."
          exit 1
        fi
